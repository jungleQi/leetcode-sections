stack中每个单元可能有1个或者2个元素，即stack可能是1D也可能是2D
一个栈，有时候需要两个栈配合

重难点：
1.什么情况或者问题特点 可以想着用栈来解决
2.入栈和出栈的时机
3.入栈出栈过程中，需要哪些变量记录关键数据


栈的灵魂是什么
希望一看到问题，就能match到栈的灵魂，用这种数据结构存储数据，利于解决问题
不希望，对一个问题，用不同的锤子都锤一遍，看是不是合适

问题特征：
一个目标序列，序列中的元素i和它后面的某个元素j有关联，要求找到最邻近的j，这样的元素往往具有多个匹配[i,j] ... [m,n]
但是在匹配过程中，目前的元素i,m还没有找到最邻近的元素，就可以考虑用栈存放已遍历的元素

问题的关键是 找到序列中一系列元素的后序元素中，最邻近的元素
栈具备这个天然缓存属性：后进先出，顶部的就是和当前元素最邻近

