一、定义：
在计算机科学中，一个图就是一些顶点的集合，这些顶点通过一系列边结对（连接）。
顶点用圆圈表示，边就是这些圆圈之间的连线。顶点之间通过边连接。
注意：顶点有时也称为节点或者交点，边有时也称为链接

二、类型
第一种图包含圈（cycles），即你可以从一个顶点出发，沿着一条路劲最终会回到最初的顶点。树是不包含圈的图。
另一种常见的图类型是单向图或者 DAG

三、应用
为什么要使用图？
如果你有一个编程问题可以通过顶点和边表示出来，那么你就可以将你的问题用图画出来，然后使用著名的图算法（比如广度优先搜索 或者 深度优先搜索）来找到解决方案。
例如，假设你有一系列任务需要完成，但是有的任务必须等待其他任务完成后才可以开始。你可以通过非循环有向图来建立模型
现在这个问题就通过图描述清楚了，你可以使用深度优先搜索算法来执行执行拓扑排序。
这样就可以将所有的任务排入最优的执行顺序，保证等待任务完成的时间最小化

不管是什么时候遇到困难的编程问题，问一问自己：“如何用图来表述这个问题？”。
图都是用于表示数据之间的关系。 诀窍在于如何定义“关系”

四、表示
理论上，图就是一堆顶点和边对象而已，但是怎么在代码中来描述呢？
有两种主要的方法：邻接列表和邻接矩阵。
邻接列表：在邻接列表实现中，每一个顶点会存储一个从它这里开始的边的列表
邻接矩阵：在邻接矩阵实现中，由行和列都表示顶点，由两个顶点所决定的矩阵对应元素表示这里两个顶点是否相连、如果相连这个值表示的是相连边的权重。